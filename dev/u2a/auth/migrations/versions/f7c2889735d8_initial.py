"""initial

Revision ID: f7c2889735d8
Revises: 
Create Date: 2022-06-09 16:11:34.412785

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f7c2889735d8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('sessions',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('logon_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('expires', sa.DateTime(), nullable=False),
    sa.Column('access_token', sa.String(), nullable=False),
    sa.Column('refresh_token', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('user_id', 'id'),
    postgresql_partition_by='HASH(user_id, id)'
    )
    op.execute('CREATE TABLE auth.sessions_p0 PARTITION OF auth.sessions FOR VALUES WITH (MODULUS 4, REMAINDER 0)')
    op.execute('CREATE TABLE auth.sessions_p1 PARTITION OF auth.sessions FOR VALUES WITH (MODULUS 4, REMAINDER 1)')
    op.execute('CREATE TABLE auth.sessions_p2 PARTITION OF auth.sessions FOR VALUES WITH (MODULUS 4, REMAINDER 2)')
    op.execute('CREATE TABLE auth.sessions_p3 PARTITION OF auth.sessions FOR VALUES WITH (MODULUS 4, REMAINDER 3)')

    op.create_table('users',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('login', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('lastname', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('active', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('login')
    )
    op.create_table('user2role',
    sa.Column('id', postgresql.UUID(as_uuid=True), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('role_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id'),
    sa.UniqueConstraint('user_id', 'role_id', name='ur')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user2role')
    op.drop_table('users')
    op.drop_table('sessions')
    op.drop_table('sessions_p0')
    op.drop_table('sessions_p1')
    op.drop_table('sessions_p2')
    op.drop_table('sessions_p3')
    op.drop_table('roles')
    # ### end Alembic commands ###
